image: macos-monterey

skip_branch_with_pr: true

skip_commits:
  files:
    - docs/**/*
    - media/**/*
    - "*.md"

environment:
    PYTHON_STACK: python 3.10
    FLUTTER_MACOS_URL: https://storage.googleapis.com/flutter_infra_release/releases/stable/macos/flutter_macos_3.13.7-stable.zip
    GITHUB_TOKEN:
      secure: 7vLBgpgnCmXEamgXg8FVYmk4tzM6imghpkuiewsSZ5OF107mQKFl3cvD8UsJEWlQ

    matrix:

    - job_name: Build app for iOS
      job_group: build_app_darwin
      APPVEYOR_BUILD_WORKER_IMAGE: macos-catalina

    - job_name: Build app for Android
      job_group: build_app_android
      APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey

    - job_name: Build app for web
      job_group: build_app_web
      APPVEYOR_BUILD_WORKER_IMAGE: ubuntu2004

    - job_name: Build app for Windows
      job_group: build_app_windows
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      PYTHON: "C:\\Python39-x64"

    - job_name: Build app for Macos
      job_group: build_app_macos
      APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey
    
    - job_name: Build app for Linux
      job_group: build_app_linux
      APPVEYOR_BUILD_WORKER_IMAGE: ubuntu2004
    
    - job_name: Test on Android
      job_group: test_Android
      job_depends_on: build_app_android
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004

    - job_name: Test on macOS
      job_group: test_serious_python
      job_depends_on: build_python_darwin
      APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey
    
    - job_name: Test on iOS
      job_group: test_serious_python
      job_depends_on: build_python_darwin
      APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey

    - job_name: Test on Windows
      job_group: test_serious_python
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022

    - job_name: Test on Linux
      job_group: test_serious_python
      APPVEYOR_BUILD_WORKER_IMAGE: ubuntu2004




test: off

# Publish artifacts to GitHub Releases on "tag" builds
deploy:
  provider: GitHub
  auth_token: $(GITHUB_TOKEN)
  on:
    APPVEYOR_REPO_TAG: false



for:



# ======================================
  #      Build app for iOS
  # ======================================

  - matrix:
      only:
        - job_name: Build app for iOS

    install:
      - # Agregar directorio local bin al PATH
      - export PATH="$PATH:$HOME/.local/bin"

        # Agregar el directorio bin de python3 al PATH
      #- export PATH="$PATH:$(python3 -m site --user-base)/bin"

      - export PATH="$PATH:/Users/appveyor/.gem/ruby/3.1.0/bin"


        # Añadir la clave GPG de Eclipse Adoptium
      - brew tap homebrew/cask-versions

      


      #- brew install cocoapods

      # install ruby 
      #- curl -L https://get.rvm.io | bash -s stable
      #- echo $"\nsource /Users/$(whoami)/.rvm/scripts/rvm\n" >> /Users/$(whoami)/.zshrc # or .bashrc
      - rvm use ruby-3.1.3
      - rvm --default use 3.1.3
      
      - alias gem="arch -x86_64 sudo gem"

      - gem install --user-install ffi -- --enable-libffi-alloc
      #install bundles
      - gem install bundler
      #install cocoapods
      - sudo gem install cocoapods -n /usr/local/bin

      - alias pod="arch -arm64 pod"

      
    

      #instalar xcode
      #- brew install robotsandpencils/made/xcodes
      

      # Install Aria2 "For Fast download"
      #- brew install aria2

      # Install XCode (ex. Xcode 13 Beta 5)
      #- xcodes install 14.3 ya tiene por default el 14.1

      #- export XCODES_USERNAME="<your_email>"
      #- export XCODES_PASSWORD="<your_pass>"


      #install runtimes

      #dice que para que runtimes funcione hay que hacer esto
      #- brew remove xcodes
      #- brew untap robotsandpenciles/made
      #- brew install xcodesorg/made/xcodes

      # list available xcode versions
      #- xcodes list

      # Update available xcode versions
      #- xcodes update

      #- xcodes select 13.4.1

      #- xcodes runtimes --include-betas

      #- xcodes runtimes install "iOS 17.0-beta1"

      - sudo gem install xcode-install


      #usar python ios 

      - brew install python@3.11.6
      - export PATH="$PATH:$(python3.11.6 -m site --user-base)/bin"

      - python3 -m venv .venv
      - source .venv/bin/activate

      - pip3 install flet

      - pip3 install git+https://github.com/flet-dev/python-for-ios.git

      - brew install autoconf automake libtool pkg-config
      - brew link libtool

      #start the compilation

      - toolchain build python3 

      
      - export SERIOUS_PYTHON_IOS_DIST="/Users/appveyor/projects/quitadondo/dist/"




      #flutter
      
      - curl $FLUTTER_MACOS_URL -o "$HOME/flutter_macos_stable.zip"
      - unzip -qq "$HOME/flutter_macos_stable.zip" -d $HOME
      - export PATH="$PATH:$HOME/flutter/bin"
      - flutter channel stable
      - flutter upgrade
      - flutter config --enable-macos-desktop
      - flutter doctor
      

      

    build_script:
      
      - flet build ipa -vv
    
    after_build:
      - echo "Verificando la existencia de archivos .ipa en ./build/ipa
      - ls ./build/ipa
      - echo "Creando archivo zip con app.tar.gz"
      - zip -r fletsheet-ios.zip ./build/ipa/

    artifacts:
      - path: fletsheet-ios.zip




    


  # ======================================
  #      Build app for Web
  # ======================================

  - matrix:
      only:
        - job_name: Build app for web

    install:
      -  pip3 install flet
      -  sudo pip3 install flet
      -  sudo apt update --allow-releaseinfo-change
      -  sudo apt install -y xvfb libgtk-3-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio
      -  flutter upgrade --force
      -  export PATH="$PATH:/home/appveyor/flutter/bin"

    build_script:
      - flet build web --template gh:flet-dev/flet-build-template -vv

    after_build:
      - tar -czvf fletsheet-web.tar.gz ./build
    artifacts:
      - path: fletsheet-web.tar.gz




  # ======================================
  #      Build app for Android
  # ======================================

  - matrix:
      only:
        - job_name: Build app for Android

    install:
      
      - # Agregar directorio local bin al PATH
      - export PATH="$PATH:$HOME/.local/bin"

        # Agregar el directorio bin de python3 al PATH
      - export PATH="$PATH:$(python3 -m site --user-base)/bin"

        # Añadir la clave GPG de Eclipse Adoptium
      - brew tap homebrew/cask-versions

      #instalar java 18
      - brew install --cask temurin18
      - export JAVA_HOME=$(/usr/libexec/java_home -v 18)
      
      - echo $JAVA_HOME

            
      
      #- brew install gradle
      ## Reinstall Gradle to Latest Version
      #- echo $"\nexport GRADLE_VERSION=$(echo $(arr=($(gradle --version | awk '{ print $2 }')) && echo ${arr[1]}))\n" >> /Users/$(whoami)/.zshrc
      #- echo $"\nexport GRADLE_HOME=`brew --prefix`/Cellar/gradle/$GRADLE_VERSION\n" >> /Users/$(whoami)/.zshrc
      #- echo $"\nexport PATH=$GRADLE_HOME/bin:$PATH\n" >> /Users/$(whoami)/.zshrc


      ## Since android-sdk is deprecated
      - brew install --cask android-commandlinetools

      # Export some paths
      - echo $"\nexport ANDROID_HOME=`brew --prefix`/share/android-commandlinetools\n" >> /Users/$(whoami)/.zshrc
      - echo $"\nexport PATH=$ANDROID_HOME:$PATH\n" >> /Users/$(whoami)/.zshrc

      - echo $"\nexport SDK_MANAGER=`brew --prefix`/bin/sdkmanager\n" >> /Users/$(whoami)/.zshrc
      - echo $"\nexport PATH=$SDK_MANAGER:$PATH\n" >> /Users/$(whoami)/.zshrc

      - echo $"\nexport AVD=`brew --prefix`/bin/avdmanager\n" >> /Users/$(whoami)/.zshrc
      - echo $"\nexport PATH=$AVD:$PATH\n" >> /Users/$(whoami)/.zshrc

      # Then Accept all licenses
      - yes | sdkmanager --licenses

      # Then Install Tools
      - y | sdkmanager "cmdline-tools;latest" "platforms;android-33" "emulator" "tools" "platform-tools" "ndk;25.2.9519653"


      - sdkmanager "ndk-bundle"


      - brew install android-platform-tools

      - echo $"\nexport ADB=`brew --prefix`/bin/adb\n" >> /Users/$(whoami)/.zshrc
      - echo $"\nexport PATH=$ADB:$PATH\n" >> /Users/$(whoami)/.zshrc


        # Instalar flet
      - pip3 install flet

      - export ANDROID_SDK_ROOT="/usr/local/share/android-commandlinetools"
      - export NDK_VERSION=25.2.9519653
      - export SDK_VERSION=android-33



      #- echo "y" | sdkmanager --install "ndk;$NDK_VERSION" --channel=3
      #- echo "y" | sdkmanager --install "platforms;$SDK_VERSION"     

      #- ls $ANDROID_HOME


        # Instalar python-for-android
      - pip3 install git+https://github.com/flet-dev/python-for-android.git@3.11.6

        # Actualizar Cython
      - pip3 install --upgrade cython


        # Crear el entorno de distribución para Python en Android
      - for i in {1..2}; do if [ $i -eq 1 ]; then echo "N"; else echo "Y"; fi; done | p4a create --requirements python3 --arch arm64-v8a --arch armeabi-v7a --arch x86_64 --sdk-dir $ANDROID_SDK_ROOT --ndk-dir $ANDROID_SDK_ROOT/ndk/$NDK_VERSION --dist-name mydist
      #- echo "N" | p4a create --requirements python3 --arch arm64-v8a --arch armeabi-v7a --arch x86_64 --sdk-dir $ANDROID_SDK_ROOT --ndk-dir $ANDROID_SDK_ROOT/ndk/$NDK_VERSION --dist-name mydist

      - export SERIOUS_PYTHON_P4A_DIST=$HOME/.python-for-android/dists/mydist



      
      #flutter
      - HOMEBREW_NO_AUTO_UPDATE=1 brew install cocoapods
      - curl $FLUTTER_MACOS_URL -o "$HOME/flutter_macos_stable.zip"
      - unzip -qq "$HOME/flutter_macos_stable.zip" -d $HOME
      - export PATH="$PATH:$HOME/flutter/bin"
      - flutter channel stable
      - flutter upgrade
      - flutter config --enable-macos-desktop
      - flutter doctor


    build_script:
      #- flet build apk --template gh:flet-dev/flet-build-template -vv
      - flet build apk -vv

    after_build:
      - echo "Verificando la existencia de archivos .apk en ./build/apk"
      - ls ./build/apk
      - zip -r fletsheet-android.zip ./build/apk/*.apk

    artifacts:
      - path: fletsheet-android.zip
      



#
# Windows package
#


  - matrix:
      only:
        - job_name: Build app for Windows

    install:
    - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
    - "python -m pip install --upgrade pip"
    - "pip install flet"
    - "pip install flet-route"
    - "pip install openpyxl"
    - "flutter upgrade --force"
    
    build_script:
      - flet build windows --template gh:flet-dev/flet-build-template -vv
    after_build:
      - echo %CD%
      - 7z a fletsheet-windows.zip %CD%\build
    artifacts:
      - path: fletsheet-windows.zip



  

#
# macOS package
#

  - matrix:
      only:
        - job_name: Build app for Macos


    install:
      - pip3 install flet
      - export PATH=$PATH:$(python3 -m site --user-base)/bin
      - HOMEBREW_NO_AUTO_UPDATE=1 brew install cocoapods
      - curl $FLUTTER_MACOS_URL -o "$HOME/flutter_macos_stable.zip"
      - unzip -qq "$HOME/flutter_macos_stable.zip" -d $HOME
      - export PATH="$PATH:$HOME/flutter/bin"
      - flutter channel stable
      - flutter upgrade
      - flutter config --enable-macos-desktop
      - flutter doctor

    build_script:
      - flet build macos --template gh:flet-dev/flet-build-template -vv

    
    after_build:
      - echo "Verificando la existencia de archivos .app en ./build/macos"
      - ls ./build/macos
      - zip -r fletsheet-macos.zip ./build/macos/*.app

    artifacts:
      - path: fletsheet-macos.zip

  



#
# Linux package
#

  - matrix:
      only:
        - job_name: Build app for Linux

    install:
      -  pip3 install flet
      -  sudo pip3 install flet
      -  sudo apt update --allow-releaseinfo-change
      -  sudo apt install -y xvfb libgtk-3-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio
      -  flutter upgrade --force
      -  export PATH="$PATH:/home/appveyor/flutter/bin"

    build_script:
      - flet build linux --template gh:flet-dev/flet-build-template -vv

    after_build:
      - tar -czvf fletsheet-linux.tar.gz ./build/linux/
    artifacts:
      - path: fletsheet-linux.tar.gz


    

# ======================================
  #      Test on Android
  # ======================================

  - matrix:
      only:
        - job_name: Test on Android

    install:
      - API_LEVEL="33"
      - TARGET="android-desktop"
      - ARCH="x86_64"
      - DEVICE_NAME="android_emulator"
      - DEVICE_TYPE="pixel_5"
      - 'export PATH=$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/emulator:$PATH'
      - sdkmanager "platform-tools" "platforms;android-${API_LEVEL}"
      - sdkmanager --install "system-images;android-${API_LEVEL};${TARGET};${ARCH}"
      - sdkmanager --update
      - echo "y" | sdkmanager --licenses
      - echo "no" | avdmanager -v create avd --force --name "${DEVICE_NAME}" --package "system-images;android-${API_LEVEL};${TARGET};${ARCH}" --tag "${TARGET}" --sdcard 128M --device "${DEVICE_TYPE}"
      - ls -al ~/.android/avd
      - sudo adduser $USER kvm
      - sudo chown $USER /dev/kvm
      - emulator -avd "${DEVICE_NAME}" -memory 2048 -wipe-data -no-boot-anim -cache-size 1000 -noaudio -no-window -partition-size 8192 &
      - adb wait-for-device shell 'while [[ -z $(getprop dev.bootcomplete) ]]; do sleep 1; done;'
      - flutter upgrade --force
      - flutter doctor -v

    build: off

    test_script:
      
    after_test:
      # Empaquetar logs en un archivo ZIP
      #- zip -r logs_android.zip logcat.txt

    artifacts:
      # Publicar el archivo ZIP como un artefacto
      #- path: logs_android.zip




# ======================================
  #      Test on macOS
  # ======================================

  - matrix:
      only:
        - job_name: Test on macOS

    install:
      - HOMEBREW_NO_AUTO_UPDATE=1 brew install cocoapods
      - curl $FLUTTER_MACOS_URL -o "$HOME/flutter_macos_stable.zip"
      - unzip -qq "$HOME/flutter_macos_stable.zip" -d $HOME
      - export PATH="$PATH:$HOME/flutter/bin"
      - flutter channel stable
      - flutter upgrade
      - flutter config --enable-macos-desktop
      - flutter doctor

    build: off

    test_script:
      

  # ======================================
  #      Test on iOS
  # ======================================

  - matrix:
      only:
        - job_name: Test on iOS

    install:
      - HOMEBREW_NO_AUTO_UPDATE=1 brew install cocoapods
      - curl $FLUTTER_MACOS_URL -o "$HOME/flutter_macos_stable.zip"
      - unzip -qq "$HOME/flutter_macos_stable.zip" -d $HOME
      - export PATH="$PATH:$HOME/flutter/bin"
      - flutter channel stable
      - flutter upgrade
      - flutter config --enable-macos-desktop
      - xcrun simctl list runtimes
      - xcrun simctl create "e2e test" "iPhone 12" "com.apple.CoreSimulator.SimRuntime.iOS-16-1"
      - xcrun xctrace list devices
      - |
          UDID=$(xcrun xctrace list devices | grep "^e2e test Simulator (16.1)" | awk '{gsub(/[()]/,""); print $NF}')      
          echo $UDID
          xcrun simctl boot "${UDID:?No Simulator with this name found}"
      #- flutter doctor -v


    build: off

    test_script:
     
# ======================================
  #      Test on Windows
  # ======================================

  - matrix:
      only:
        - job_name: Test on Windows

    #environment:
    #  VC_REDIST_DIR: 'C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Redist\MSVC\14.29.30133\x64\Microsoft.VC142.CRT'

    install:
      - flutter upgrade --force

    build: off

    test_script:
      

  # ======================================
  #      Test on Linux
  # ======================================

  - matrix:
      only:
        - job_name: Test on Linux

    install:
      - sudo apt update --allow-releaseinfo-change
      - sudo apt install -y xvfb libgtk-3-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio
      - flutter upgrade --force

    build: off

    test_script:
      

