image: macos-monterey

skip_branch_with_pr: true

skip_commits:
  files:
    - docs/**/*
    - media/**/*
    - "*.md"

environment:
    PYTHON_STACK: python 3.10
    FLUTTER_MACOS_URL: https://storage.googleapis.com/flutter_infra_release/releases/stable/macos/flutter_macos_3.13.7-stable.zip
    GITHUB_TOKEN:
      secure: 7vLBgpgnCmXEamgXg8FVYmk4tzM6imghpkuiewsSZ5OF107mQKFl3cvD8UsJEWlQ

    matrix:

    - job_name: Build app for Android
      job_group: build_app_android
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004

    - job_name: Build app for web
      job_group: build_app_web
      APPVEYOR_BUILD_WORKER_IMAGE: ubuntu2004

    - job_name: Build app for Windows
      job_group: build_app_windows
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      PYTHON: "C:\\Python39-x64"

    - job_name: Build app for Macos
      job_group: build_app_macos
      APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey
    
    - job_name: Build app for Linux
      job_group: build_app_linux
      APPVEYOR_BUILD_WORKER_IMAGE: ubuntu2004

    - job_name: Build app for iOS
      job_group: build_app_darwin
      APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey
    
    - job_name: Test on Android
      job_group: test_Android
      job_depends_on: build_app_android
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004

    - job_name: Test on macOS
      job_group: test_serious_python
      job_depends_on: build_python_darwin
      APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey
    
    - job_name: Test on iOS
      job_group: test_serious_python
      job_depends_on: build_python_darwin
      APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey

    - job_name: Test on Windows
      job_group: test_serious_python
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022

    - job_name: Test on Linux
      job_group: test_serious_python
      APPVEYOR_BUILD_WORKER_IMAGE: ubuntu2004




test: off

# Publish artifacts to GitHub Releases on "tag" builds
deploy:
  provider: GitHub
  auth_token: $(GITHUB_TOKEN)
  on:
    APPVEYOR_REPO_TAG: false



for:


  # ======================================
  #      Build app for Web
  # ======================================

  - matrix:
      only:
        - job_name: Build app for web

    install:
      -  pip3 install flet
      -  sudo pip3 install flet
      -  sudo apt update --allow-releaseinfo-change
      -  sudo apt install -y xvfb libgtk-3-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio
      -  flutter upgrade --force
      -  export PATH="$PATH:/home/appveyor/flutter/bin"

    build_script:
      - flet build web --template gh:flet-dev/flet-build-template -vv

    after_build:
      - tar -czvf fletsheet-web.tar.gz ./build
    artifacts:
      - path: fletsheet-web.tar.gz




  # ======================================
  #      Build app for Android
  # ======================================

  - matrix:
      only:
        - job_name: Build app for Android

    install:
      #borrar devcontainer y appveyor por si esas son las causas del problema
      - ls ./
      - rm -rf .devcontainer
      - rm -f appveyor.yml
      - rm -rf .git
      - rm -rf .vscode
      - ls ./
      - export PATH=$PATH:/home/appveyor/.local/bin
      - export PATH=$PATH:$(python3 -m site --user-base)/bin
      

      #Add the eclipse adoptium gpg key
      #- wget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | sudo apt-key add -
      #add the eclipse adoptium apt repository
      #- echo "deb https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | sudo tee /etc/apt/sources.list.d/adoptium.list
      #install temurin version
      #- sudo apt update
      #- echo "y" | sudo apt install temurin-8-jdk

      #- sudo update-alternatives --config java
      #- echo "sudo update-alternatives --config java" && echo "3"
      #- export JAVA_HOME=/usr/lib/jvm/temurin-8-jdk-amd64

      #cambiar luego a java 18 para que p4a funcione
      - wget https://github.com/adoptium/temurin18-binaries/releases/download/jdk-18.0.2.1%2B1/OpenJDK18U-jdk_x64_linux_hotspot_18.0.2.1_1.tar.gz
      - tar -xvzf OpenJDK18U-jdk_x64_linux_hotspot_18.0.2.1_1.tar.gz
      - sudo mv jdk-18.0.2.1+1 /usr/lib/jvm/
      - sudo update-alternatives --install /usr/lib/jvm/java java /usr/lib/jvm/jdk-18.0.2.1+1 1
      #- # Cambia la configuración de Java
      - sudo update-alternatives --config java
      - echo "3"
      - export JAVA_HOME=/usr/lib/jdk-18.0.2.1+1

      - pip3 install flet
      #- pip3 install p4a-build
      

      # install NDK
      - export ANDROID_SDK_ROOT="/usr/lib/android-sdk"
      - export NDK_VERSION=25.2.9519653
      - export SDK_VERSION=android-33

      #add path to sdkmanager to PATH
      - export PATH=$ANDROID_SDK_ROOT/tools/bin:$PATH
      
      - echo "y" | sdkmanager --install "ndk;$NDK_VERSION" --channel=3 
      - echo "y" | sdkmanager --install "platforms;$SDK_VERSION" 

      # install Kivy for Android
      - pip3 install git+https://github.com/flet-dev/python-for-android.git@3.11.6
      - pip3 install --upgrade cython
      - p4a --help

      - echo "N" | p4a create --requirements python3 --arch arm64-v8a --arch armeabi-v7a --arch x86_64 --sdk-dir $ANDROID_SDK_ROOT --ndk-dir $ANDROID_SDK_ROOT/ndk/$NDK_VERSION --dist-name serious_python
      - flutter upgrade --force
      - export SERIOUS_PYTHON_P4A_DIST="/home/appveyor/.local/share/python-for-android/dists/serious_python"
       # Verificar que el directorio de distribución existe y listar su contenido
      - echo "Verificando el directorio de distribución de Python para Android:"
      - ls -l $SERIOUS_PYTHON_P4A_DIST

    build_script:
      #- flet build apk --template gh:flet-dev/flet-build-template -vv
      - flet build apk -vv

    after_build:
      - echo "Verificando la existencia de archivos .apk en ./build/apk"
      - ls ./build/apk
      - zip -r fletsheet-android.zip ./build/apk/*.apk

    artifacts:
      - path: fletsheet-android.zip
      



#
# Windows package
#


  - matrix:
      only:
        - job_name: Build app for Windows

    install:
    - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
    - "python -m pip install --upgrade pip"
    - "pip install flet"
    - "pip install flet-route"
    - "pip install openpyxl"
    - "flutter upgrade --force"
    
    build_script:
      - flet build windows --template gh:flet-dev/flet-build-template -vv
    after_build:
      - echo %CD%
      - 7z a fletsheet-windows.zip %CD%\build
    artifacts:
      - path: fletsheet-windows.zip



  

#
# macOS package
#

  - matrix:
      only:
        - job_name: Build app for Macos


    install:
      - pip3 install flet
      - export PATH=$PATH:$(python3 -m site --user-base)/bin
      - HOMEBREW_NO_AUTO_UPDATE=1 brew install cocoapods
      - curl $FLUTTER_MACOS_URL -o "$HOME/flutter_macos_stable.zip"
      - unzip -qq "$HOME/flutter_macos_stable.zip" -d $HOME
      - export PATH="$PATH:$HOME/flutter/bin"
      - flutter channel stable
      - flutter upgrade
      - flutter config --enable-macos-desktop
      - flutter doctor

    build_script:
      - flet build macos --template gh:flet-dev/flet-build-template -vv

    
    after_build:
      - echo "Verificando la existencia de archivos .app en ./build/macos"
      - ls ./build/macos
      - zip -r fletsheet-macos.zip ./build/macos/*.app

    artifacts:
      - path: fletsheet-macos.zip

  



#
# Linux package
#

  - matrix:
      only:
        - job_name: Build app for Linux

    install:
      -  pip3 install flet
      -  sudo pip3 install flet
      -  sudo apt update --allow-releaseinfo-change
      -  sudo apt install -y xvfb libgtk-3-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio
      -  flutter upgrade --force
      -  export PATH="$PATH:/home/appveyor/flutter/bin"

    build_script:
      - flet build linux --template gh:flet-dev/flet-build-template -vv

    after_build:
      - tar -czvf fletsheet-linux.tar.gz ./build/linux/
    artifacts:
      - path: fletsheet-linux.tar.gz



# ======================================
  #      Build app for iOS
  # ======================================

  - matrix:
      only:
        - job_name: Build app for iOS

    install:
      - pip3 install flet
      - export PATH=$PATH:~/.local/bin
      #- pip3 install flet-route
      #- pip3 install openpyxl
      #- export PATH=$PATH:$(python3 -m site --user-base)/bin

      # install Kivy toolchain
      - pip3 list
      - pip3 install git+https://github.com/flet-dev/python-for-ios.git
      - HOMEBREW_NO_AUTO_UPDATE=1 brew install autoconf automake libtool pkg-config
      - brew link libtool
      - HOMEBREW_NO_AUTO_UPDATE=1 brew install cocoapods
      - curl $FLUTTER_MACOS_URL -o "$HOME/flutter_macos_stable.zip"
      - unzip -qq "$HOME/flutter_macos_stable.zip" -d $HOME
      - export PATH="$PATH:$HOME/flutter/bin"
      # Configura PATH para incluir el comando toolchain si es necesario
      - export PATH="$PATH:$(python3 -m site --user-base)/bin"
      - flutter channel stable
      - flutter upgrade
      - flutter config --enable-macos-desktop
      - flutter doctor
      - toolchain build python3
      - export SERIOUS_PYTHON_IOS_DIST="$(pwd)/dist"

    build_script:
      # build Python 3
      - flet build ipa --template gh:flet-dev/flet-build-template -vv
    
    after_build:
      - echo "Verificando la existencia de archivos .ipa en ./build/ipa"
      #- toolchain build python3
      - ls dist
      - ls ./build/ipa
      - echo "Creando archivo zip con app.tar.gz"
      - zip -r fletsheet-ios.zip ./build/ipa/Runner.xcarchive


    artifacts:
      - path: fletsheet-ios.zip
    

# ======================================
  #      Test on Android
  # ======================================

  - matrix:
      only:
        - job_name: Test on Android

    install:
      - API_LEVEL="33"
      - TARGET="android-desktop"
      - ARCH="x86_64"
      - DEVICE_NAME="android_emulator"
      - DEVICE_TYPE="pixel_5"
      - 'export PATH=$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/emulator:$PATH'
      - sdkmanager "platform-tools" "platforms;android-${API_LEVEL}"
      - sdkmanager --install "system-images;android-${API_LEVEL};${TARGET};${ARCH}"
      - sdkmanager --update
      - echo "y" | sdkmanager --licenses
      - echo "no" | avdmanager -v create avd --force --name "${DEVICE_NAME}" --package "system-images;android-${API_LEVEL};${TARGET};${ARCH}" --tag "${TARGET}" --sdcard 128M --device "${DEVICE_TYPE}"
      - ls -al ~/.android/avd
      - sudo adduser $USER kvm
      - sudo chown $USER /dev/kvm
      - emulator -avd "${DEVICE_NAME}" -memory 2048 -wipe-data -no-boot-anim -cache-size 1000 -noaudio -no-window -partition-size 8192 &
      - adb wait-for-device shell 'while [[ -z $(getprop dev.bootcomplete) ]]; do sleep 1; done;'
      - flutter upgrade --force
      - flutter doctor -v

    build: off

    test_script:
      - echo "Descargando el artefacto AndroidAPK de AppVeyor"
      - appveyor DownloadFile "https://github.com/jaluscg/FletSheet/releases/download/1.0.208/fletsheet-android.zip"
      - echo "Descomprimiendo el artefacto"
      - unzip fletsheet-android.zip -d apk
      # Instalar el APK en el emulador
      - adb install apk/build/apk/app-release.apk
      # Limpiar el buffer de logcat
      - adb logcat -c
      # Iniciar la aplicación
      - adb shell am start -n com.flet.fletsheet/.MainActivity
      # Esperar un momento para que la aplicación se inicie y genere logs
      - sleep 20
      # Recolectar y mostrar logs específicos
      - adb logcat -d > logcat.txt
      - cat logcat.txt
      - ls ./
    
    after_test:
      # Empaquetar logs en un archivo ZIP
      #- zip -r logs_android.zip logcat.txt

    artifacts:
      # Publicar el archivo ZIP como un artefacto
      #- path: logs_android.zip




# ======================================
  #      Test on macOS
  # ======================================

  - matrix:
      only:
        - job_name: Test on macOS

    install:
      - HOMEBREW_NO_AUTO_UPDATE=1 brew install cocoapods
      - curl $FLUTTER_MACOS_URL -o "$HOME/flutter_macos_stable.zip"
      - unzip -qq "$HOME/flutter_macos_stable.zip" -d $HOME
      - export PATH="$PATH:$HOME/flutter/bin"
      - flutter channel stable
      - flutter upgrade
      - flutter config --enable-macos-desktop
      - flutter doctor

    build: off

    test_script:
      

  # ======================================
  #      Test on iOS
  # ======================================

  - matrix:
      only:
        - job_name: Test on iOS

    install:
      - HOMEBREW_NO_AUTO_UPDATE=1 brew install cocoapods
      - curl $FLUTTER_MACOS_URL -o "$HOME/flutter_macos_stable.zip"
      - unzip -qq "$HOME/flutter_macos_stable.zip" -d $HOME
      - export PATH="$PATH:$HOME/flutter/bin"
      - flutter channel stable
      - flutter upgrade
      - flutter config --enable-macos-desktop
      - xcrun simctl list runtimes
      - xcrun simctl create "e2e test" "iPhone 12" "com.apple.CoreSimulator.SimRuntime.iOS-16-1"
      - xcrun xctrace list devices
      - |
          UDID=$(xcrun xctrace list devices | grep "^e2e test Simulator (16.1)" | awk '{gsub(/[()]/,""); print $NF}')      
          echo $UDID
          xcrun simctl boot "${UDID:?No Simulator with this name found}"
      #- flutter doctor -v


    build: off

    test_script:
     
# ======================================
  #      Test on Windows
  # ======================================

  - matrix:
      only:
        - job_name: Test on Windows

    #environment:
    #  VC_REDIST_DIR: 'C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Redist\MSVC\14.29.30133\x64\Microsoft.VC142.CRT'

    install:
      - flutter upgrade --force

    build: off

    test_script:
      

  # ======================================
  #      Test on Linux
  # ======================================

  - matrix:
      only:
        - job_name: Test on Linux

    install:
      - sudo apt update --allow-releaseinfo-change
      - sudo apt install -y xvfb libgtk-3-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio
      - flutter upgrade --force

    build: off

    test_script:
      


  